import java.util.Scanner;

public class Start {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("\n====== Welcome To the Grocery Shop Management Program ======\n");

        // Initialize the shop
        GroceryShop shop = new GroceryShop();

        // Populate shop with dummy products
        String[] dummyNames = {"Apple", "Orange", "Tomatoes", "Potatoes", "Bread", "Frying Pan", "Kitchen Knife", "Soap", "Shampoo", "Toothpaste"};
        for (int i = 0; i < dummyNames.length; i++) {
            if (i < 5) {
                Edibles ed = new Edibles("E" + i, dummyNames[i], "BestFood", 25, 50, 5);
                shop.insertProduct(ed);
            } else {
                NonEdibles ned = new NonEdibles("N" + i, dummyNames[i], "BestBrand", 25, 50, "materials");
                shop.insertProduct(ned);
            }
        }

        boolean isProgramOpen = true;
        while (isProgramOpen) {
            System.out.println("\nAre you an Owner or a User? \n1. Owner \n2. User \n3. Close Program");
            int userType = input.nextInt();
            input.nextLine(); // Consume newline

            switch (userType) {
                case 1:
                    // Owner operations
                    boolean ownerOperations = true;
                    while (ownerOperations) {
                        System.out.println("\nOwner Options: \n1. Add Product \n2. Restock Product \n3. Delete Product \n4. Show All Products \n5. Back to Main Menu");
                        int ownerOption = input.nextInt();
                        input.nextLine(); // Consume newline

                        switch (ownerOption) {
                            case 1:
                                // Add product
                                System.out.println("Enter product type (1 for Edible, 2 for NonEdible):");
                                int type = input.nextInt();
                                input.nextLine(); // Consume newline

                                System.out.println("Enter product ID:");
                                String id = input.nextLine();
                                System.out.println("Enter product name:");
                                String name = input.nextLine();
                                System.out.println("Enter product brand:");
                                String brand = input.nextLine();
                                System.out.println("Enter product price:");
                                double price = input.nextDouble();
                                System.out.println("Enter product quantity:");
                                int quantity = input.nextInt();
                                input.nextLine(); // Consume newline

                                if (type == 1) {
                                    System.out.println("Enter expiry days:");
                                    int expiryDays = input.nextInt();
                                    input.nextLine(); // Consume newline
                                    Edibles ed = new Edibles(id, name, brand, price, quantity, expiryDays);
                                    shop.insertProduct(ed);
                                } else {
                                    System.out.println("Enter material:");
                                    String material = input.nextLine();
                                    NonEdibles ned = new NonEdibles(id, name, brand, price, quantity, material);
                                    shop.insertProduct(ned);
                                }
                                break;
                            case 2:
                                // Restock product
                                System.out.println("Enter product name to restock:");
                                String restockName = input.nextLine();
                                System.out.println("Enter quantity to restock:");
                                int restockQuantity = input.nextInt();
                                input.nextLine(); // Consume newline
                                shop.restockProduct(restockName, restockQuantity);
                                break;
                            case 3:
                                // Delete product
                                System.out.println("Enter product name to delete:");
                                String deleteName = input.nextLine();
                                shop.deleteProduct(deleteName);
                                break;
                            case 4:
                                // Show all products
                                shop.showAllProducts();
                                break;
                            case 5:
                                ownerOperations = false;
                                break;
                            default:
                                System.out.println("Invalid option. Please try again.");
                        }
                    }
                    break;
                case 2:
                    // User operations
                    System.out.println("Enter your name:");
                    String userName = input.nextLine();
                    User user = new User(userName, shop);
                    
                    boolean userOperations = true;
                    while (userOperations) {
                        System.out.println("\nUser Options: \n1. Add Product to Cart \n2. Remove Product from Cart \n3. Place Order \n4. Show All Products \n5. Back to Main Menu");
                        int userOption = input.nextInt();
                        input.nextLine(); // Consume newline

                        switch (userOption) {
                            case 1:
                                // Add product to cart
                                System.out.println("Enter product name to add to cart:");
                                String addProductName = input.nextLine();
                                user.addProductToCart(addProductName);
                                break;
                            case 2:
                                // Remove product from cart
                                System.out.println("Enter product name to remove from cart:");
                                String removeProductName = input.nextLine();
                                user.removeProductFromCart(removeProductName);
                                break;
                            case 3:
                                // Place order
                                user.placeOrder();
                                break;
                            case 4:
                                // Show all products
                                shop.showAllProducts();
                                break;
                            case 5:
                                userOperations = false;
                                break;
                            default:
                                System.out.println("Invalid option. Please try again.");
                        }
                    }
                    break;
                case 3:
                    isProgramOpen = false;
                    System.out.println("Thank you for using the program. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
        input.close();
    }
}
